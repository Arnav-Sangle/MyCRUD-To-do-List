/* 
    px = fixed size
    rem = responsive size, auto adjust size reletive to Root size 
*/

body {
    background-color: beige;
}

.todo-container {
    background-color: white;
    text-align: center;

    width: fit-content;
        /* width adjust as per content */

    padding: 2rem;
    margin: auto;
    margin-top: 10rem;
}

input {
    padding: 0.5rem;
    font-size: 15px;
}


.btn {
    color: white;
    padding: 0.5rem;
    font-size: 0.85rem;
    font-family: Arial, Helvetica, sans-serif;

    border: none;
    border-radius: 4px;
    padding: 10px;
    margin-left: 0.4rem;
}

#add-task-btn {
    background-color: green;
}

#add-task-btn:hover {
    background-color: rgb(29, 217, 29);
    color: black;
    cursor: pointer;
}



ul {
    margin-top: 3rem;
    padding: 0;
}

li {
    list-style-type: none;

    background-color: white;
    /* margin-left: 5rem; */
    margin-bottom: 10px;
    border-radius: 4px;

    display: flex; 
    /* justify-content: center;
    justify-items: center; */
    align-items: center;
    text-align: justify;

}






/* descendent selector      div p =  p inside div       <div> <p> </div> */
    li span {
        flex-grow: 1;
        margin-left: 10px;              /* L   M   R*/
    }

    /* 
        flex-grow: 1;
            The flex item will grow to fill any remaining space in the container, 
                relative to other flex items with a flex-grow value set. 
            If all items have flex-grow: 1; 
                they will equally share the available space.
    */


    /* 
    justify-content
        Context: Flexbox and Grid containers
        Purpose: Aligns the entire flex or grid items 
                along the main axis (horizontal axis in a row layout, 
                vertical axis in a column layout).


    justify-items
        Context: Grid containers
        Purpose: Aligns the grid items within their grid area 
                along the inline (row) axis.
    */



.edit-btn {

    background-color: rgb(234, 162, 27);
    align-items: end;
}

.edit-btn:hover {
    background-color: rgb(255, 177, 31);
    color: black;
    cursor: pointer;
}


.delete-btn {
    background-color: rgb(195, 18, 18);
}

.delete-btn:hover {
    background-color: rgb(255, 0, 0);
    color: black;
    cursor: pointer;
}



.test {
    padding: 0;
    right: 0;
}


